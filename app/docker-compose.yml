version: '3.7'

volumes:
  rabbitmq-data:
  traefik-certs:

networks:
  backend:
    internal: true
  frontend:
    internal: false


secrets:
  app_id:
    file: secrets/app_id.txt
  app_key:
    file: secrets/app_key.pem
  code_sign_key:
    file: secrets/code_sign_key.asc
  erlang_cookie:
    file: secrets/erlang_cookie.txt


x-app-common: &app-common
  image: biocondabot
  networks:
    - backend
  environment:
    - PYTHONUNBUFFERED=true
    - APP_KEY_FILE=/run/secrets/app_key
    - APP_ID_FILE=/run/secrets/app_id
    - CODE_SIGNING_KEY_FILE=/run/secrets/code_sign_key
    - CLOUDAMQP_URL=amqp://mq:5672
  secrets:
    - app_key
    - app_id
    - code_sign_key
  depends_on:
    - mq

services:
  mq:
    hostname: mq    
    image: rabbitmq:latest
    secrets:
      - source: erlang_cookie
        target: /var/lib/rabbitmq/.erlang.cookie
        uid: '999'
        gid: '999'
        mode: 0600
    user: rabbitmq
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - backend
  
  web:
    <<: *app-common
    hostname: web
    build:
      context: ..
      dockerfile: Dockerfile.web
    command: >-
       gunicorn 
       --worker-class aiohttp.worker.GunicornWebWorker
       --bind 0.0.0.0:80
       bioconda_utils.bot:init_app
       #(disable_internal_celery=True)
    depends_on:
      - mq
    deploy:
      labels:
        traefik.enable: "true"
        traefik.port: 80
        traefik.frontend.rule: Host:biocondabot.pruesse.net

  worker:
    <<: *app-common
    command: >-
      celery worker
      -l info
      -A bioconda_utils.bot
      --without-heartbeat
    deploy:
      mode: replicated
      replicas: 2

  shepherd:
    image: mazzolino/shepherd:0.3.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
        - node.role == manager

  flower:
    image: mher/flower
    command: >-
      flower
      --broker=amqp://mq:5672
      --port=8080
      --url_prefix=flower
    networks:
      - backend
    depends_on:
      - mq
    deploy:
      labels:
        traefik.enable: "true"
        traefik.port: 8080
        traefik.frontend.rule: "Host: biocondabot.pruesse.net; PathPrefixStrip: /flower"

  frontend:
    image: traefik
    command: >-
      --api
      --docker
      --docker.swarmMode
      --docker.exposedByDefault=false
      --docker.watch
      --docker.domain=biocondabot.pruesse.net
      --entryPoints="Name:http Address::80 Redirect.EntryPoint:https"
      --entryPoints="Name:https Address::443 TLS"
      --defaultentrypoints=http,https
      --logLevel=INFO
      --acme
      --acme.entryPoint=https
      --acme.httpChallenge
      --acme.httpChallenge.entrypoint=http
      --acme.domains=biocondabot.pruesse.net
      --acme.email=info@pruesse.net
      --acme.storage=acme/certs.json
      --acme.acmelogging
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml
      - traefik-certs:/acme
    networks:
      - backend
    deploy:
      labels:
        traefik.port: 8080
        traefik.frontend.rule: Host:biocondabot.pruesse.net;PathPrefixStrip:/traefik/

